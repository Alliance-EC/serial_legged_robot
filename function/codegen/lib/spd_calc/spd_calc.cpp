//
// File: spd_calc.cpp
//
// MATLAB Coder version            : 23.2
// C/C++ source code generated on  : 09-Oct-2024 21:19:27
//

// Include Files
#include "spd_calc.h"
#include <cmath>

// Function Definitions
//
// SPD_CALC
//     SPD = SPD_CALC(PHI1,PHI2,PHI_DOT_1,PHI_DOT_2)
//
// Arguments    : double phi1
//                double phi2
//                double phi_dot_1
//                double phi_dot_2
//                double spd[2]
// Return Type  : void
//
void spd_calc(double phi1, double phi2, double phi_dot_1, double phi_dot_2,
              double spd[2])
{
  double t15;
  double t18;
  double t19;
  double t22;
  double t23;
  double t26;
  double t27;
  double t29;
  double t30;
  double t33;
  //     This function was generated by the Symbolic Math Toolbox version 23.2.
  //     2024-10-09 21:18:14
  t15 = phi1 - phi2;
  t18 = std::cos(phi1) * 0.18;
  t19 = std::cos(phi2) * 0.18;
  t22 = std::sin(phi1) * 0.18;
  t23 = std::sin(phi2) * 0.18;
  t26 = t22 + t23;
  t27 = t18 + t19;
  t29 = t27 * t27;
  t30 = 1.0 / t27;
  t33 = 1.0 / (t26 * t26 + t29);
  spd[0] = std::sin(t15) / std::sqrt(std::cos(t15) * 0.0648 + 0.0648) *
           (phi_dot_1 - phi_dot_2) * -0.0324;
  t27 = t26 * (1.0 / t29);
  spd[1] = phi_dot_1 * t29 * t33 * (t30 * t18 + t27 * t22) +
           phi_dot_2 * t29 * t33 * (t30 * t19 + t27 * t23);
}

//
// File trailer for spd_calc.cpp
//
// [EOF]
//
